// Generated by Dagger (https://google.github.io/dagger).
package com.nytimes.articles.data.remote.repository;

import com.nytimes.articles.data.local.dao.ArticleDao;
import com.nytimes.articles.data.remote.ApiService;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ArticleRepository_Factory implements Factory<ArticleRepository> {
  private final Provider<ArticleDao> daoProvider;

  private final Provider<ApiService> serviceProvider;

  public ArticleRepository_Factory(
      Provider<ArticleDao> daoProvider, Provider<ApiService> serviceProvider) {
    this.daoProvider = daoProvider;
    this.serviceProvider = serviceProvider;
  }

  @Override
  public ArticleRepository get() {
    return new ArticleRepository(daoProvider.get(), serviceProvider.get());
  }

  public static ArticleRepository_Factory create(
      Provider<ArticleDao> daoProvider, Provider<ApiService> serviceProvider) {
    return new ArticleRepository_Factory(daoProvider, serviceProvider);
  }

  public static ArticleRepository newArticleRepository(ArticleDao dao, ApiService service) {
    return new ArticleRepository(dao, service);
  }
}
